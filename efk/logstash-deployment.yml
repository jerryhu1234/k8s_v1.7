---
kind: Deployment
apiVersion: apps/v1beta2
metadata:
  labels:
    elastic-app: logstash
  name: logstash
  namespace: kube-system
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      elastic-app: logstash
  template:
    metadata:
      labels:
        elastic-app: logstash
    spec:
      containers:
        - name: logstash
          image: registry.cn-hangzhou.aliyuncs.com/hybit/logstash-6.2.3
          volumeMounts:
            - mountPath: /usr/share/logstash/pipeline
              name: logstash-conf-volume
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: "XPACK_MONITORING_ELASTICSEARCH_URL"
              value: "elasticsearch-logging.kube-system:9200"
          securityContext:
            privileged: true
      volumes:
        - name: logstash-conf-volume
          configMap:
            name: logstash-config
          
#      tolerations:
#        - key: node-role.kubernetes.io/master
#          effect: NoSchedule

---
kind: Service
apiVersion: v1
metadata:
  labels:
    elastic-app: logstash
  name: logstash-service
  namespace: kube-system
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    elastic-app: logstash
  type: NodePort

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: kube-system
data:
  logstash.conf: |-
    input {
      kafka {
        group_id => "log-api-1"
        topics => ["log-api"]
        codec => "json"
        bootstrap_servers => "kafka-svc.kube-system:9093"
      }
    }
     
    filter {
      grok {
        match => {
          "message" => "%{DATESTAMP:date} \[%{GREEDYDATA:thread}\] %{WORD:level} %{JAVACLASS:class} - %{GREEDYDATA:msg}"
        }
        overwrite => ["message"]
      }
      mutate {
          remove_field => ["@version"]
      }
    }
     
    output {
        elasticsearch {
              hosts => ["elasticsearch-logging.kube-system:9200"]
              index => "app-log-%{[fields][env]}"
            #  user => "elastic"
            #  password => "changeme"
        }
    }

